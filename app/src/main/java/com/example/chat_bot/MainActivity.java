package com.example.chat_bot;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.recyclerview.widget.LinearLayoutManager;
import androidx.recyclerview.widget.RecyclerView;

import android.os.AsyncTask;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.RelativeLayout;
import android.widget.Toast;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

import java.util.ArrayList;
import java.util.List;

import ai.api.AIDataService;

import ai.api.AIListener;
import ai.api.AIServiceException;
import ai.api.android.AIConfiguration;
import ai.api.android.AIService;
import ai.api.model.AIError;
import ai.api.model.AIRequest;
import ai.api.model.AIResponse;
import ai.api.model.Result;


public class MainActivity extends AppCompatActivity implements AIListener{

    private EditText etMessage;
    private RecyclerView recyclerView;
    private RelativeLayout addBtn;
    private RecyclerView.Adapter adapter;
    private List<ChatMessage> chatMessages;
    private FirebaseDatabase firebaseDatabase;
    private DatabaseReference myref;
    private final static String ACCESS_TOKEN="9b345b5caead4dd08c5ae1626f14dd78 ";
    private AIService aiService;
    private AIConfiguration config;
    private AIDataService aiDataService;
    private AIRequest aiRequest;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        // Configuring the remote AI agent and initialising it for handling requests
        config = new AIConfiguration(ACCESS_TOKEN, AIConfiguration.SupportedLanguages.English,
                AIConfiguration.RecognitionEngine.System);
        aiService = AIService.getService(this, config);
        aiService.setListener(this);
        aiDataService = new AIDataService(config);
        aiRequest = new AIRequest();

        //Linking with the layout object
        recyclerView = findViewById(R.id.recyclerView);
        etMessage = findViewById(R.id.etMessage);
        addBtn = findViewById(R.id.addBtn);

        chatMessages = new ArrayList<>();

        //Recyclerview parameters set
        recyclerView.setHasFixedSize(true);
        LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
        linearLayoutManager.setStackFromEnd(true);
        recyclerView.setLayoutManager(linearLayoutManager);

        //Firebase instance obtained
        firebaseDatabase = FirebaseDatabase.getInstance();
        myref = firebaseDatabase.getReference();
        myref.keepSynced(true);

        //addListenerForSingleValueEvent is used as we need to load the data from firebase databsae only once, in the beginning
        myref.child("chat").addListenerForSingleValueEvent(new ValueEventListener() {
            @Override
            public void onDataChange(@NonNull DataSnapshot dataSnapshot) {

                //dataSnapshot.getChildren() renders the id generated by push()
                for (DataSnapshot postSnapShot : dataSnapshot.getChildren()) {
                    ChatMessage chatMessage = postSnapShot.getValue(ChatMessage.class);
                    chatMessages.add(chatMessage);
                }

                //adapter is initialised to handle views in the recyclerview
                adapter = new MyAdapter(MainActivity.this, chatMessages);
                recyclerView.setAdapter(adapter);
            }

            @Override
            public void onCancelled(@NonNull DatabaseError databaseError) {
                Log.e("The read failed: ", databaseError.getMessage());
            }
        });

        // Onclick event is assigned with the addBtn Relative layout
        addBtn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {

                String message = etMessage.getText().toString().trim();
                final ChatMessage chatMessage = new ChatMessage(message, "user");
                myref.child("chat").push().setValue(chatMessage);
                chatMessages.add(chatMessage);

                //adapter is initialised to handle views in the recyclerview
                adapter = new MyAdapter(MainActivity.this, chatMessages);
                recyclerView.setAdapter(adapter);

                //GET request made to the AI agent for querying
                aiRequest.setQuery(message);

                // Async task is created to handle the GET request as a separate thread
                //onPostExecution is used to response obtained
                new AsyncTask<AIRequest,Void, AIResponse>() {

                    @Override
                    protected AIResponse doInBackground(AIRequest... aiRequests) {
                        final AIRequest request = aiRequests[0];
                        try {
                            final AIResponse response = aiDataService.request(aiRequest);
                            return response;
                        } catch (AIServiceException e) {
                        }
                        return null;
                    }

                    @Override
                    protected void onPostExecute(AIResponse response) {
                        if (response != null) {

                            Result result = response.getResult();
                            String reply = result.getFulfillment().getSpeech();
                            //In adapter, the onbindviewholder is segregating the messages based on user
                            //So bot Chatessages are with user="bot"
                            ChatMessage chatMessage = new ChatMessage(reply, "bot");
                            myref.child("chat").push().setValue(chatMessage);
                            chatMessages.add(chatMessage);
                            //adapter is initialised to handle views in the recyclerview
                            adapter = new MyAdapter(MainActivity.this, chatMessages);
                            recyclerView.setAdapter(adapter);
                        }
                    }
                }.execute(aiRequest);
                // Edittext is cleared for next message
                etMessage.setText("");

            }
        });

    }

    @Override
    public void onResult(AIResponse result) {

    }

    @Override
    public void onError(AIError error) {
        Toast.makeText(MainActivity.this,error.getMessage(),Toast.LENGTH_LONG);
    }

    @Override
    public void onAudioLevel(float level) {

    }

    @Override
    public void onListeningStarted() {

    }

    @Override
    public void onListeningCanceled() {

    }

    @Override
    public void onListeningFinished() {

    }
}
